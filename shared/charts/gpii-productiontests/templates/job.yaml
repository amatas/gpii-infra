apiVersion: batch/v1
kind: Job
metadata:
  namespace: {{ .Release.Namespace | quote }}
  name: {{ template "productiontests.name" . }}
spec:
  template:
    metadata:
      labels:
        app: {{ template "productiontests.name" . }}
    spec:
      shareProcessNamespace: true
      containers:
      - name: gpii-productiontests
        image: "{{ .Values.image.repository }}@{{ .Values.image.checksum }}"
        securityContext:
          allowPrivilegeEscalation: false
          runAsUser: 1337
        command: [ "/bin/sh", "-c" ]
        args:
          - while true;
            do
              echo "Waiting for flowmanager...";
              RET_CODE=$(curl -k --write-out '%{http_code}' --silent --output /dev/null https://flowmanager.clown.dev.gcp.gpii.net/health);
              if [ "$RET_CODE" = '200' ]; then
                break;
              fi;
              sleep 30;
            done;
            npm run test:productionConfig;
            while true;
            do
                echo "sleeping...";
                sleep 2;
            done;
        env:
        - name: GPII_COUCHDB_URL
          value: '{{ .Values.couchdbUrl }}'
        - name: GPII_CLOUD_URL
          value: '{{ .Values.flowmanager.url }}'
        - name: GPII_FLOWMANAGER_LISTEN_PORT
          value: '{{ .Values.flowmanager.port }}'
        - name: GPII_DATASOURCE_HOSTNAME
          value: '{{ .Values.datasourceHostname }}'
        - name: GPII_DATASOURCE_PORT
          value: '{{ .Values.datasourceListenPort }}'
      - name: istio-proxy-manager
        image: "{{ .Values.image.repository }}@{{ .Values.image.checksum }}"
        securityContext:
          allowPrivilegeEscalation: false
          runAsUser: 1337
        command: [ "/bin/sh", "-c" ]
        args:
          - while ! ps -o user | grep node > /dev/null;
            do
              echo 'Waiting for npm run test:productionConfig to start...';
              sleep 2;
            done;
            echo 'npm started.';
            while ps -o user | grep node > /dev/null;
            do
              echo 'Waiting for npm run test:productionConfig to finish...';
              sleep 2;
            done;
            echo 'npm run test:productionConfig finished.';
            echo 'Sending TERM to pilot-agent';
            pkill pilot-agent;
      restartPolicy: Never
